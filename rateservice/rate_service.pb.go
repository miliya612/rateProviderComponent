// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rate_service.proto

package rateservice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RateRequest struct {
	Base                 string   `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Counter              []string `protobuf:"bytes,2,rep,name=counter,proto3" json:"counter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RateRequest) Reset()         { *m = RateRequest{} }
func (m *RateRequest) String() string { return proto.CompactTextString(m) }
func (*RateRequest) ProtoMessage()    {}
func (*RateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rate_service_0205e4d55e32480f, []int{0}
}
func (m *RateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RateRequest.Unmarshal(m, b)
}
func (m *RateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RateRequest.Marshal(b, m, deterministic)
}
func (dst *RateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RateRequest.Merge(dst, src)
}
func (m *RateRequest) XXX_Size() int {
	return xxx_messageInfo_RateRequest.Size(m)
}
func (m *RateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RateRequest proto.InternalMessageInfo

func (m *RateRequest) GetBase() string {
	if m != nil {
		return m.Base
	}
	return ""
}

func (m *RateRequest) GetCounter() []string {
	if m != nil {
		return m.Counter
	}
	return nil
}

type RateResponse struct {
	Base                 string   `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Date                 string   `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Rates                []*Rates `protobuf:"bytes,3,rep,name=rates,proto3" json:"rates,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RateResponse) Reset()         { *m = RateResponse{} }
func (m *RateResponse) String() string { return proto.CompactTextString(m) }
func (*RateResponse) ProtoMessage()    {}
func (*RateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rate_service_0205e4d55e32480f, []int{1}
}
func (m *RateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RateResponse.Unmarshal(m, b)
}
func (m *RateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RateResponse.Marshal(b, m, deterministic)
}
func (dst *RateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RateResponse.Merge(dst, src)
}
func (m *RateResponse) XXX_Size() int {
	return xxx_messageInfo_RateResponse.Size(m)
}
func (m *RateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RateResponse proto.InternalMessageInfo

func (m *RateResponse) GetBase() string {
	if m != nil {
		return m.Base
	}
	return ""
}

func (m *RateResponse) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *RateResponse) GetRates() []*Rates {
	if m != nil {
		return m.Rates
	}
	return nil
}

type Currencies struct {
	Currency             []string `protobuf:"bytes,1,rep,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Currencies) Reset()         { *m = Currencies{} }
func (m *Currencies) String() string { return proto.CompactTextString(m) }
func (*Currencies) ProtoMessage()    {}
func (*Currencies) Descriptor() ([]byte, []int) {
	return fileDescriptor_rate_service_0205e4d55e32480f, []int{2}
}
func (m *Currencies) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Currencies.Unmarshal(m, b)
}
func (m *Currencies) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Currencies.Marshal(b, m, deterministic)
}
func (dst *Currencies) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Currencies.Merge(dst, src)
}
func (m *Currencies) XXX_Size() int {
	return xxx_messageInfo_Currencies.Size(m)
}
func (m *Currencies) XXX_DiscardUnknown() {
	xxx_messageInfo_Currencies.DiscardUnknown(m)
}

var xxx_messageInfo_Currencies proto.InternalMessageInfo

func (m *Currencies) GetCurrency() []string {
	if m != nil {
		return m.Currency
	}
	return nil
}

type Rates struct {
	Currency             string   `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Value                float32  `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rates) Reset()         { *m = Rates{} }
func (m *Rates) String() string { return proto.CompactTextString(m) }
func (*Rates) ProtoMessage()    {}
func (*Rates) Descriptor() ([]byte, []int) {
	return fileDescriptor_rate_service_0205e4d55e32480f, []int{3}
}
func (m *Rates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rates.Unmarshal(m, b)
}
func (m *Rates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rates.Marshal(b, m, deterministic)
}
func (dst *Rates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rates.Merge(dst, src)
}
func (m *Rates) XXX_Size() int {
	return xxx_messageInfo_Rates.Size(m)
}
func (m *Rates) XXX_DiscardUnknown() {
	xxx_messageInfo_Rates.DiscardUnknown(m)
}

var xxx_messageInfo_Rates proto.InternalMessageInfo

func (m *Rates) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Rates) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_rate_service_0205e4d55e32480f, []int{4}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*RateRequest)(nil), "rateservice.RateRequest")
	proto.RegisterType((*RateResponse)(nil), "rateservice.RateResponse")
	proto.RegisterType((*Currencies)(nil), "rateservice.Currencies")
	proto.RegisterType((*Rates)(nil), "rateservice.Rates")
	proto.RegisterType((*Empty)(nil), "rateservice.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RateProviderClient is the client API for RateProvider service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RateProviderClient interface {
	GetRate(ctx context.Context, in *RateRequest, opts ...grpc.CallOption) (*RateResponse, error)
	GetSupportedCurrencies(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Currencies, error)
}

type rateProviderClient struct {
	cc *grpc.ClientConn
}

func NewRateProviderClient(cc *grpc.ClientConn) RateProviderClient {
	return &rateProviderClient{cc}
}

func (c *rateProviderClient) GetRate(ctx context.Context, in *RateRequest, opts ...grpc.CallOption) (*RateResponse, error) {
	out := new(RateResponse)
	err := c.cc.Invoke(ctx, "/rateservice.RateProvider/GetRate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rateProviderClient) GetSupportedCurrencies(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Currencies, error) {
	out := new(Currencies)
	err := c.cc.Invoke(ctx, "/rateservice.RateProvider/GetSupportedCurrencies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RateProviderServer is the server API for RateProvider service.
type RateProviderServer interface {
	GetRate(context.Context, *RateRequest) (*RateResponse, error)
	GetSupportedCurrencies(context.Context, *Empty) (*Currencies, error)
}

func RegisterRateProviderServer(s *grpc.Server, srv RateProviderServer) {
	s.RegisterService(&_RateProvider_serviceDesc, srv)
}

func _RateProvider_GetRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RateProviderServer).GetRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rateservice.RateProvider/GetRate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RateProviderServer).GetRate(ctx, req.(*RateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RateProvider_GetSupportedCurrencies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RateProviderServer).GetSupportedCurrencies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rateservice.RateProvider/GetSupportedCurrencies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RateProviderServer).GetSupportedCurrencies(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _RateProvider_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rateservice.RateProvider",
	HandlerType: (*RateProviderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRate",
			Handler:    _RateProvider_GetRate_Handler,
		},
		{
			MethodName: "GetSupportedCurrencies",
			Handler:    _RateProvider_GetSupportedCurrencies_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rate_service.proto",
}

func init() { proto.RegisterFile("rate_service.proto", fileDescriptor_rate_service_0205e4d55e32480f) }

var fileDescriptor_rate_service_0205e4d55e32480f = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x31, 0x4f, 0xbc, 0x40,
	0x10, 0xc5, 0x0f, 0x38, 0xfe, 0xfc, 0x6f, 0xb0, 0x9a, 0x18, 0x5d, 0xa9, 0xc8, 0x56, 0x54, 0x14,
	0x67, 0x65, 0x6c, 0x4c, 0x8c, 0xa1, 0x35, 0xeb, 0x07, 0x50, 0x0e, 0xa6, 0x20, 0x51, 0x16, 0x77,
	0x07, 0x92, 0xfb, 0x28, 0x7e, 0x5b, 0xc3, 0xee, 0xa9, 0x9c, 0x5e, 0x37, 0xef, 0xf1, 0x86, 0xfc,
	0xde, 0x2c, 0xa0, 0xa9, 0x99, 0x9e, 0x2d, 0x99, 0xa9, 0x6b, 0xa8, 0x1c, 0x8c, 0x66, 0x8d, 0xe9,
	0xec, 0x1d, 0x2c, 0x79, 0x0b, 0xa9, 0xaa, 0x99, 0x14, 0xbd, 0x8f, 0x64, 0x19, 0x11, 0xd6, 0xbb,
	0xda, 0x92, 0x08, 0xf2, 0xa0, 0xd8, 0x28, 0x37, 0xa3, 0x80, 0xa4, 0xd1, 0x63, 0xcf, 0x64, 0x44,
	0x98, 0x47, 0xc5, 0x46, 0x7d, 0x49, 0xf9, 0x02, 0x67, 0x7e, 0xd9, 0x0e, 0xba, 0xb7, 0x74, 0x72,
	0x1b, 0x61, 0xdd, 0xd6, 0x4c, 0x22, 0xf4, 0xde, 0x3c, 0x63, 0x01, 0xb1, 0x63, 0x10, 0x51, 0x1e,
	0x15, 0xe9, 0x16, 0xcb, 0x05, 0x51, 0x39, 0xff, 0xd1, 0x2a, 0x1f, 0x90, 0x05, 0xc0, 0xfd, 0x68,
	0x0c, 0xf5, 0x4d, 0x47, 0x16, 0x33, 0xf8, 0xdf, 0x78, 0xb5, 0x17, 0x81, 0x43, 0xf9, 0xd6, 0xf2,
	0x06, 0x62, 0xb7, 0xf9, 0x2b, 0x14, 0x2c, 0x43, 0x78, 0x0e, 0xf1, 0x54, 0xbf, 0x8e, 0x9e, 0x26,
	0x54, 0x5e, 0xc8, 0x04, 0xe2, 0x87, 0xb7, 0x81, 0xf7, 0xdb, 0x8f, 0xc0, 0x17, 0x7a, 0x34, 0x7a,
	0xea, 0x5a, 0x32, 0x78, 0x07, 0x49, 0x45, 0x3c, 0x5b, 0x28, 0xfe, 0x40, 0x1e, 0x6e, 0x96, 0x5d,
	0x9d, 0xf8, 0xe2, 0x0f, 0x22, 0x57, 0x58, 0xc1, 0x45, 0x45, 0xfc, 0x34, 0x0e, 0x83, 0x36, 0x4c,
	0xed, 0xa2, 0xcc, 0x71, 0x6b, 0x07, 0x90, 0x5d, 0x1e, 0x79, 0x3f, 0x61, 0xb9, 0xda, 0xfd, 0x73,
	0x8f, 0x77, 0xfd, 0x19, 0x00, 0x00, 0xff, 0xff, 0x0d, 0xb0, 0x92, 0xd3, 0xd2, 0x01, 0x00, 0x00,
}
